@model TrashCollector.Models.Customer

@{
    ViewBag.Title = "ConfirmStatusUpdate";
    Layout = "~/Views/Shared/_Layout.cshtml";
    <style>
         /* Always set the map height explicitly to define the size of the div
        * element that contains the map. */
         #map {
             height: 100%;
         }
         /* Optional: Makes the sample page fill the window. */
         html, body {
             height: 100%;
             margin: 0;
             padding: 0;
         }
    </style>
}

<h2>ConfirmStatusUpdate</h2>

<h3>Did you pickup the trash? For realz, yo?</h3>
<div>
    <h4>Customer</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.FirstName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FirstName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.LastName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LastName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.StreetAddress)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.StreetAddress)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CityName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CityName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.StateName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.StateName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ZipCode)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ZipCode)
        </dd>

    </dl>

    <div id="map" style="height:400px;width:100%;"></div>
    <script>
    //function initMap() {
    //  var sydney = new google.maps.LatLng(-33.867, 151.195);

    //  infowindow = new google.maps.InfoWindow();

    //  map = new google.maps.Map(
    //      document.getElementById('map'), {center: sydney, zoom: 15});


    //   let address;

    //  var request = {
    //    query: address,
    //    fields: ['name', 'geometry'],
    //  };

    //  var service = new google.maps.places.PlacesService(map);

    //  service.findPlaceFromQuery(request, function(results, status) {
    //    if (status === google.maps.places.PlacesServiceStatus.OK) {
    //      for (var i = 0; i < results.length; i++) {
    //        createMarker(results[i]);
    //      }
    //      map.setCenter(results[0].geometry.location);
    //    }
    //  });
    //}
    //function initMap() {
    //  var map = new google.maps.Map(document.getElementById('map'), {
    //    zoom: 8,
    //    center: {lat: 40.72, lng: -73.96}
    //  });
    //  var geocoder = new google.maps.Geocoder;
    //  var infowindow = new google.maps.InfoWindow;

    //  document.getElementById('submit').addEventListener('click', function() {
    //    geocodePlaceId(geocoder, map, infowindow);
    //  });
    //}
    function initMap() {
		var mapOptions = {
			zoom: 3,
			center: new google.maps.LatLng(lat, lng),
			mapTypeId: 'roadmap'
		};
		var map = new google.maps.Map(document.getElementById('map'), mapOptions);
	}
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC27KPTB-V-_oX4X4_CbMwctU9U2bdVbxo&callback=initMap"
            async defer></script>
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC27KPTB-V-_oX4X4_CbMwctU9U2bdVbxo&libraries=places"></script>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-actions no-color">
            <input type="submit" value="Confirm Trash Pickup" class="btn btn-default" /> |
            @Html.ActionLink("Back to List", "Index")
        </div>
    }
</div>
